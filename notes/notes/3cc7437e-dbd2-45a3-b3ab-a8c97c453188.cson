createdAt: "2020-03-19T08:14:08.449Z"
updatedAt: "2020-03-19T12:05:14.820Z"
type: "MARKDOWN_NOTE"
folder: "b52a7c0642d2c6d5f4b4"
title: "K8S health check"
tags: []
content: '''
  # K8S health check
  ### liveness probe
  - applications running for long periods of time eventually transition to broken status, but pod is running
  - liveness probe to detect above situation
  
  ### readiness probe
  - some application like db, mysql, when pod is running, application will do some initialize process. the liveness probe maybe treat this as failed node. we don't want to kill it also send request to it
  - readiness probe to detect above situation
  
  ## Probe type
  - HTTP
  - Command
  - TCP
  
  ### define liveness probe
  - Command
  ```yaml
  apiVersion: v1
  kind: Pod
  metadata:
    labels:
      test: liveness
    name: liveness-exec
  spec:
    containers:
    - name: liveness
      image: k8s.gcr.io/busybox
      args:
      - /bin/sh
      - -c
      - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 60000
      livenessProbe:
        exec:
          command:
          - cat
          - /tmp/healthy
        initialDelaySeconds: 5
        periodSeconds: 5
  ```
  - HTTP
  ```yaml
  apiVersion: v1
  kind: Pod
  metadata:
    labels:
      test: liveness
    name: liveness-http
  spec:
    containers:
    - name: liveness
      image: k8s.gcr.io/liveness
      args:
      - /server
      livenessProbe:
        httpGet:
          path: /healthz
          port: 8080
          httpHeaders:
          - name: X-Custom-Header
            value: Awesome
        initialDelaySeconds: 3
        periodSeconds: 3
  ```
  ### define readiness probe
  ```yaml
  apiVersion: v1
  kind: Pod
  metadata:
    labels:
      test: readiness
    name: readiness-http
  spec:
    containers:
    - name: simple-http
      image: python:2.7
      imagePullPolicy: IfNotPresent
      command: ["/bin/bash"]
      args: ["-c", "echo \\"<p>Hello from $(hostname)</p>\\" > index.html; sleep 8; python -m SimpleHTTPServer 8080"]
      ports:
      - name: http
        containerPort: 8080
       readinessProbe:
         tcpSocket:
          port: 8080
         initialDelaySeconds: 10 # 10s after runing start
         periodSeconds: 10 # check every 10s
       livenessProbe:
         tcpSocket:
           port: 8080
         initialDelaySeconds: 15
         periodSeconds: 20
  ```
'''
linesHighlighted: []
isStarred: false
isTrashed: false

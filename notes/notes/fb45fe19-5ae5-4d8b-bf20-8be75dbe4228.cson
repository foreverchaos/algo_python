createdAt: "2020-03-21T09:24:10.522Z"
updatedAt: "2020-03-21T10:25:56.987Z"
type: "MARKDOWN_NOTE"
folder: "b52a7c0642d2c6d5f4b4"
title: "K8S Secret"
tags: []
content: '''
  # K8S Secret
  > configure some sensitive data including token pwd
  > using volume or ENV variable
  > secret data on nodes is stored in tmpfs volumns
  > limit of 1MB recommand
  > API server stores secrets as plaintext in etcd
  
  ### Secret type
  - Service Account: generated by K8s, mount to /run/secrets/kubernetes.io/serviceaccount
  - Opaque: base 64 encode secret e.g pwd, token
  - docker registry cert
  
  ### Secret generation
  - command 
  ```ruby
  # create secret from dir
  kubectl create secret generic <name> --from-file=ssh-privatekey=id_rsa --from-file=ssh-publickey=id_rsa.pub
  
  # create secret from literal
  kubectl create secret generic <name> --from-literal=key1=abc --from-literal=key2=bcd
  ```
  - secret.yaml
  ```yaml
  apiVersion: v1
  kind: Secret
  metadata:
    name: my-secret
  type: Opaque
  data:
    #  echo -n "ABC123" |base64
    #  echo -n "QUJDMTIz" |base64 -d
    root-password: QUJDMTIz 
    no-root-password: YWJjMTIz
  ```
  - using secret from volume
  ```yaml
  apiVersion: v1
  kind: Pod
  metadata:
    name: secret_busybox
  spec:
    containers:
    - name: busybox
      image: busybox
      command: ["/bin/sh"]
      args: ["-c", "while true; do echo hello; sleep 10;done"]
      volumeMounts:
        - name: secret_key
          mountPath: "/tmp/apikey"
          readOnly: true
    volumes:
    - name: secret_key
      secret:
        secretName: my-secret
  ```
  - using secret from ENV variable
  ```yaml
  apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: mysql
    labels:
      app: mysql
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: mysql
    template:
      metadata:
        labels:
          app: mysql
      spec:
        containers:
          - image: mysql:5.6
            name: mysql
            env:
              - name: MYSQL_ROOT_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: my-secret
                    key: root-password
            ports:
              - containerPort: 3306
                name: mysql
  ```
'''
linesHighlighted: []
isStarred: false
isTrashed: false
